@using EventManagementSystem.Core.Models.Payments
@model ProcessPaymentViewModel

@{
    ViewData["Title"] = "Process Payment";
}

<div class="container mt-5">
    <h2 class="text-center mb-4" style="color: #004080;">@ViewData["Title"]</h2>

    <div class="card shadow-sm p-4" style="max-width: 700px; margin: 0 auto;">
        <!-- Alert for Reservation and Amount -->
        <div class="alert alert-info text-center">
            <p>You are paying for <strong>Reservation ID:</strong> @Model.ReservationId</p>
            <p><strong>Total Amount:</strong> $@Model.Amount</p>
        </div>

        <form asp-action="ProcessPayment" method="post" id="payment-form">
            @Html.AntiForgeryToken()
            <input type="hidden" name="PaymentMethodId" id="paymentMethodId" />
            <input type="hidden" name="Amount" value="@Model.Amount" />
            <input type="hidden" name="ReservationId" value="@Model.ReservationId" />

            <!-- Stored Cards Section -->
            @if (Model.StoredCards != null && Model.StoredCards.Any())
            {
                <h4 class="mb-3" style="color: #004080;">Choose a Saved Card</h4>
                <div class="mb-4">
                    @foreach (var card in Model.StoredCards)
                    {
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="SelectedCardId" value="@card.CardId" id="storedCard_@card.CardId" />
                            <label class="form-check-label" for="storedCard_@card.CardId">
                                **** **** **** @card.Last4Digits (Expires: @card.ExpirationDate)
                            </label>
                        </div>
                    }
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="SelectedCardId" value="new" id="newCardOption" checked />
                        <label class="form-check-label" for="newCardOption">Use a New Card</label>
                    </div>
                </div>
            }
            <h4 class="mb-3" style="color: #004080;">No Saved Cards Available</h4>
            <p class="text-muted">You don't have any saved payment methods. Please add a new card.</p>
            <a href="@Url.Action("AddPaymentMethod", "PaymentMethods")" class="btn btn-primary mt-3" style="background-color: #004080;">
                Add a New Card
            </a>

            <button type="submit" class="btn btn-primary w-100">Submit Payment</button>
        </form>
    </div>
</div>

<!-- Include Stripe.js -->
<script src="https://js.stripe.com/v3/"></script>

<script>
    var stripe = Stripe('@ViewBag.StripePublishableKey');
    var elements = stripe.elements();
    var cardElement = elements.create('card', {
        style: {
            base: {
                fontSize: '16px',
                color: '#32325d',
                '::placeholder': {
                    color: '#aab7c4',
                },
            },
            invalid: {
                color: '#fa755a',
            },
        },
    });

    // Mount the Stripe Elements card field
    cardElement.mount('#card-element');

    // Handle form submission
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        // Check if user selected to use a stored card or add a new card
        var selectedCard = document.querySelector('input[name="SelectedCardId"]:checked').value;

        if (selectedCard === 'new') {
            // If user is using a new card, create the payment method
            stripe.createPaymentMethod({
                type: 'card',
                card: cardElement,
            }).then(function (result) {
                if (result.error) {
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Set the payment method ID and submit the form
                    document.getElementById('paymentMethodId').value = result.paymentMethod.id;
                    form.submit();
                }
            });
        } else {
            // If using a stored card, just submit the form with the selected card's ID
            document.getElementById('paymentMethodId').value = selectedCard;
            form.submit();
        }
    });
</script>

<style>
    .container {
        max-width: 800px;
    }

    .card {
        border-radius: 8px;
        background-color: #f8f9fa;
    }

    h2 {
        font-weight: bold;
    }

    h4 {
        font-weight: bold;
    }

    .btn-primary {
        background-color: #004080;
        border: none;
        color: #ffffff;
        padding: 12px;
        font-size: 1rem;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #003366;
        }

    #card-element {
        background-color: #ffffff;
    }

    .form-check-label {
        color: #6c757d;
    }

    .alert-info {
        background-color: #e9f7fd;
        border-color: #b8e2f2;
        color: #004080;
    }
</style>
