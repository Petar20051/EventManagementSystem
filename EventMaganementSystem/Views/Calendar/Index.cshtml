@using EventManagementSystem.Infrastructure.Entities
@model List<Event>

@{
    ViewData["Title"] = "Calendar";

   
    var events = ViewData["events"] as List<Event>;
    var length = events?.Count() ?? 0;
}

<div class="container mt-5">
    <h2 class="text-center mb-4" style="color: #004080;">Event Calendar</h2>

    <table id="todoTable" style="display:none;">
       
        @for (int i = 0; i < length; i++)
        {
            <tr>
                <td>@Html.Encode(events[i].Id)</td>
                <td>@Html.Encode(events[i].Name)</td>
                <td>@Html.Encode(events[i].Date.ToString("yyyy-MM-dd"))</td> 
            </tr>
        }
    </table>

   
    <div class="calendarContainer">
        <div id="calendar"></div>
    </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.1.0/main.min.css">
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.1.0/main.min.js"></script>

<style>
    
    .calendarContainer {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

   
    .fc-event {
        background-color: #007bff; 
        border: 1px solid #0056b3;
        color: white;
        cursor: pointer;
        border-radius: 5px;
        padding: 5px;
        text-align: center;
    }

        .fc-event:hover {
            background-color: #0056b3;
        }

   
    .fc-toolbar {
        background-color: #004080;
        color: #ffffff;
        padding: 10px;
        border-radius: 8px;
        margin-bottom: 15px;
    }

        .fc-toolbar h2 {
            color: #ffffff;
            font-weight: bold;
        }

    
    .fc-button {
        background-color: #007bff;
        border: none;
        color: #ffffff;
        padding: 8px 15px;
        border-radius: 4px;
        font-weight: 500;
    }

        .fc-button:hover {
            background-color: #0056b3;
        }

    .fc-button-primary:not(:disabled):active {
        background-color: #0056b3;
    }
</style>

<script>
    let eventsArr = loadData();
    let calendar = initCalendar();

    function loadData() {
        let eventsArr = [];
        let todoTable = document.getElementById("todoTable");
        let trElem = todoTable.getElementsByTagName("tr");
        for (let tr of trElem) {
            let tdElems = tr.getElementsByTagName("td");
            if (tdElems.length > 0) {
                let eventId = tdElems[0].innerText;
                let eventName = tdElems[1].innerText;
                let eventDate = tdElems[2].innerText;

                let eventObj = {
                    id: eventId,
                    title: eventName,
                    start: eventDate,
                    url: `/Events/Details/${eventId}`
                };

                eventsArr.push(eventObj);
            }
        }

        return eventsArr;
    }

    function initCalendar() {
        var calendarEl = document.getElementById('calendar');

        let calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            events: eventsArr,
            eventClick: function (info) {
                window.location.href = info.event.url;
            }
        });

        calendar.render();
        return calendar;
    }
</script>
