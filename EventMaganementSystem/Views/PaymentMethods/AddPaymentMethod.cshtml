@model EventManagementSystem.Core.Models.Payments.PaymentMethodInputModel

@{
    ViewData["Title"] = "Add Payment Method";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">@ViewData["Title"]</h2>
    <div class="card shadow-sm p-4" style="max-width: 600px; margin: 0 auto;">
        <div class="card-body">
            <form id="payment-form" method="post">
                @Html.AntiForgeryToken()

                <div class="form-group mb-3">
                    <label for="card-element">Credit or Debit Card</label>
                    <div id="card-element" style="padding: 10px; border: 1px solid #ced4da; border-radius: 5px;">
                        <!-- Stripe Elements will create the card input here -->
                    </div>
                    <small id="card-errors" role="alert" class="text-danger mt-2"></small>
                </div>

                <button id="submit" class="btn btn-primary w-100 mt-3">Add Payment Method</button>
            </form>
        </div>
    </div>
</div>

<!-- Include Stripe.js -->
<script src="https://js.stripe.com/v3/"></script>

<script>
    // Initialize Stripe
    var stripe = Stripe('@ViewBag.PublishableKey'); // Set your publishable Stripe key here
    var elements = stripe.elements();

    // Create a card element
    var card = elements.create('card', {
        style: {
            base: {
                color: "#32325d",
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: "antialiased",
                fontSize: "16px",
                "::placeholder": {
                    color: "#aab7c4"
                }
            },
            invalid: {
                color: "#fa755a",
                iconColor: "#fa755a"
            }
        }
    });

    // Mount the card element
    card.mount('#card-element');

    // Fetch existing payment methods
    let existingPaymentMethods = [];
    fetch('/PaymentMethods/GetPaymentMethods')
        .then(response => response.json())
        .then(data => {
            if (data && Array.isArray(data)) {
                existingPaymentMethods = data;
            }
        })
        .catch(error => {
            console.error('Error fetching payment methods:', error);
        });

    // Handle form submission
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        // Create the payment method
        stripe.createPaymentMethod({
            type: 'card',
            card: card,
        }).then(function (result) {
            if (result.error) {
                // Display error message in #card-errors
                document.getElementById('card-errors').textContent = result.error.message;
            } else {
                // Check if the card is already added
                const cardLast4 = result.paymentMethod.card.last4;
                const cardBrand = result.paymentMethod.card.brand;
                const alreadyExists = existingPaymentMethods.some(method =>
                    method.last4 === cardLast4 && method.brand.toLowerCase() === cardBrand.toLowerCase()
                );

                if (alreadyExists) {
                    document.getElementById('card-errors').textContent = "This card is already added.";
                    return;
                }

                // Send PaymentMethodId to the server
                var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

                fetch('/PaymentMethods/AddPaymentMethod', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': csrfToken
                    },
                    body: JSON.stringify({
                        paymentMethodId: result.paymentMethod.id
                    })
                }).then(function (response) {
                    if (response.ok) {
                        response.json().then(function (data) {
                            alert(data.message || "Payment method added successfully!");
                            window.location.href = '/PaymentMethods/ManagePaymentMethods'; // Redirect to manage payment methods page
                        });
                    } else {
                        response.json().then(function (error) {
                            document.getElementById('card-errors').textContent = error.error || "An error occurred.";
                        });
                    }
                }).catch(function (error) {
                    document.getElementById('card-errors').textContent = "A network error occurred. Please try again.";
                });
            }
        });
    });
</script>

<style>
    .container {
        max-width: 800px;
    }

    .card {
        background-color: #f8f9fa;
        border-radius: 8px;
    }

    h2 {
        font-weight: bold;
    }

    #submit {
        background-color: #004080;
        border: none;
        color: white;
        padding: 12px;
        font-size: 1rem;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        #submit:hover {
            background-color: #003366;
        }

    #card-element {
        font-size: 1rem;
        color: #32325d;
    }

    #card-errors {
        color: #fa755a;
    }
</style>
