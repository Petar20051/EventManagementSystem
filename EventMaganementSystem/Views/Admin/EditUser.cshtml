@using EventManagementSystem.Core.Models.Account
@model EditUserViewModel

@{
    ViewData["Title"] = "Edit User";
}

<h1 class="text-center">Edit User</h1>

<div class="container mt-5">
    <form asp-action="EditUser" method="post">
        <input type="hidden" asp-for="Id" />

        <div class="form-group">
            <label asp-for="UserName" class="form-label">Username</label>
            <input asp-for="UserName" class="form-control" />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>

        <div class="form-group mt-3">
            <label asp-for="Email" class="form-label">Email</label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group mt-3">
            <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
            <input asp-for="PhoneNumber" class="form-control" />
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>

        @if (Model.Roles != null && Model.Roles.Any())
        {
            <div class="form-group mt-3">
                <label>Roles</label>
                <ul>
                    @foreach (var role in Model.Roles)
                    {
                        <li>@role</li>
                    }
                </ul>
            </div>
        }

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Save Changes</button>
            <a asp-action="ViewUsers" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
