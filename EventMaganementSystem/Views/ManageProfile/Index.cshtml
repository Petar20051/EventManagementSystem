@using EventManagementSystem.Core.Models.Account
@using EventManagementSystem.Infrastructure.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model ManageProfileViewModel

<div class="container mt-5 text-center">
    <h2 class="text-center mb-4" style="color: #004080;">Manage Profile</h2>

    <div class="card shadow-sm p-4 mb-4">
        <h3 class="card-title" style="color: #004080;">Profile Information</h3>
        <p><strong>Username:</strong> @Model.UserName.Substring(0, Model.UserName.IndexOf('@'))</p>
        <p><strong>Email:</strong> @Model.UserName</p>
        <p><strong>Sponsored Amount:</strong> @Model?.SponsoredAmount.ToString("C")</p>
        <p><strong>Sponsorship Tier:</strong> @Model?.SponsorshipTier?.ToString()</p>
    </div>
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success mt-3">
            @TempData["Message"]
        </div>
    }

    <div class="card shadow-sm p-4 mb-4">
        <h3 class="card-title" style="color: #004080;">Tickets</h3>
        @if (Model?.Tickets != null && Model.Tickets.Any())
        {
            <ul class="list-unstyled">
                <li>
                    <form action="@Url.Action("MyTickets", "Ticket")" method="get" style="display:inline;">
                        <button type="submit" class="btn btn-primary custom-button">My Tickets</button>
                    </form>
                </li>
            </ul>
        }
        else
        {
            <p>You have no tickets.</p>
        }
    </div>

    <div class="card shadow-sm p-4 mb-4">
        <h3 class="card-title" style="color: #004080;">Update Profile Information</h3>
        <div class="text-center">
            <button type="button" class="btn btn-secondary custom-button" onclick="window.location.href='@Url.Action("Index", "ChangePassword")'">Change Password</button>
        </div>

        @if (User.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(User);
            if (user != null && !await UserManager.IsInRoleAsync(user, "Organizer"))
            {
                <h3>Become an Organizer</h3>
                <div class="text-center">
                    <form asp-action="BecomeOrganizer" method="post">
                        <button type="submit" class="btn btn-primary custom-button">Become Organizer</button>
                    </form>
                </div>
            }
            else
            {
                <h4>Organizer Status:</h4>
                <p>You are already an organizer.</p>
            }
        }
        else
        {
            <p>You need to log in to become an organizer.</p>
        }
    </div>

    <div class="card shadow-sm p-4 mb-4">
        <h3 class="card-title" style="color: #004080;">Manage Payment Methods</h3>
        <div class="text-center">
            <button type="button" class="btn btn-primary custom-button" onclick="window.location.href='@Url.Action("ManagePaymentMethods", "PaymentMethods")'">Payment Methods</button>
        </div>
    </div>
</div>

<style>
    .container {
        max-width: 800px;
        text-align: center;
    }

    .card {
        border-radius: 8px;
        background-color: #f8f9fa;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    p, ul {
        color: #6c757d;
        font-size: 1rem;
    }

    .btn-primary {
        background-color: #004080;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #003366;
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: white;
        transition: background-color 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .custom-button {
        width: auto; 
        max-width: 200px;
        padding: 0.5rem 1rem; 
    }

    .alert {
        font-weight: 600;
        text-align: center;
    }
</style>
